<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.4 on win32)" generated="20210904 21:07:31.805" rpa="false" schemaversion="2">
<suite id="s1" name="CreateCharacters" source="C:\Projetos\test-automation-marvel-api\specs\CreateCharacters.robot">
<test id="s1-t1" name="Deve cadastrar um personagem">
<kw name="Set Client Key" library="Base">
<arg>eliete@gmail.com</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{usuario}</var>
<arg>email=${email}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210904 21:07:32.074" level="INFO">&amp;{usuario} = { email=eliete@gmail.com }</msg>
<status status="PASS" starttime="20210904 21:07:32.074" endtime="20210904 21:07:32.074"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_URL}/accounts</arg>
<arg>json=${usuario}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210904 21:07:33.118" level="INFO">POST Request : url=http://marvel.qaninja.academy/accounts 
 path_url=/accounts 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '29', 'Content-Type': 'application/json'} 
 body=b'{"email": "eliete@gmail.com"}' 
 </msg>
<msg timestamp="20210904 21:07:33.119" level="INFO">POST Response : url=http://marvel.qaninja.academy/accounts 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'Etag': 'W/"29-MAUdn1v+rLZB5Xv2zhZHsu4lobg"', 'Date': 'Sun, 05 Sep 2021 00:07:32 GMT', 'Via': '1.1 vegur'} 
 body={"client_key":"6131897c2f65af00162b4dad"} 
 </msg>
<msg timestamp="20210904 21:07:33.119" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210904 21:07:32.074" endtime="20210904 21:07:33.120"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${client_key}</var>
<arg>${response.json()}[client_key]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210904 21:07:33.122" level="INFO">${client_key} = 6131897c2f65af00162b4dad</msg>
<status status="PASS" starttime="20210904 21:07:33.120" endtime="20210904 21:07:33.123"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{HEADERS}</var>
<arg>client_key=${client_key}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210904 21:07:33.124" level="INFO">&amp;{HEADERS} = { client_key=6131897c2f65af00162b4dad }</msg>
<status status="PASS" starttime="20210904 21:07:33.123" endtime="20210904 21:07:33.125"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${HEADERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210904 21:07:33.126" level="INFO">${HEADERS} = {'client_key': '6131897c2f65af00162b4dad'}</msg>
<status status="PASS" starttime="20210904 21:07:33.125" endtime="20210904 21:07:33.126"/>
</kw>
<status status="PASS" starttime="20210904 21:07:32.074" endtime="20210904 21:07:33.127"/>
</kw>
<kw name="Factory Thanos" library="Thanos">
<var>&amp;{personagem}</var>
<msg timestamp="20210904 21:07:33.131" level="INFO">&amp;{personagem} = { name=Ronald Peters | aliases=Thanos | age=3000 | team=Ordem Negra | active=False }</msg>
<status status="PASS" starttime="20210904 21:07:33.129" endtime="20210904 21:07:33.131"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${API_URL}/characters</arg>
<arg>json=${personagem}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210904 21:07:33.442" level="INFO">POST Request : url=http://marvel.qaninja.academy/characters 
 path_url=/characters 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'client_key': '6131897c2f65af00162b4dad', 'Content-Length': '99', 'Content-Type': 'application/json'} 
 body=b'{"name": "Ronald Peters", "aliases": "Thanos", "age": 3000, "team": "Ordem Negra", "active": false}' 
 </msg>
<msg timestamp="20210904 21:07:33.442" level="INFO">POST Response : url=http://marvel.qaninja.academy/characters 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '158', 'Etag': 'W/"9e-YiLP6c6PpZY9rUUppeLi9J3wTz4"', 'Date': 'Sun, 05 Sep 2021 00:07:32 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"61340a44a382520016a4bd39","name":"Ronald Peters","age":3000,"aliases":"Thanos","team":"Ordem Negra","active":false,"owner":"6131897c2f65af00162b4dad"} 
 </msg>
<msg timestamp="20210904 21:07:33.443" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20210904 21:07:33.132" endtime="20210904 21:07:33.443"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20210904 21:07:33.445" endtime="20210904 21:07:33.446"/>
</kw>
<status status="PASS" starttime="20210904 21:07:32.073" endtime="20210904 21:07:33.446"/>
</test>
<test id="s1-t2" name="Não deve cadastrar com o mesmo nome">
<kw name="Factory Thanos" library="Thanos">
<var>${personagem}</var>
<msg timestamp="20210904 21:07:33.453" level="INFO">${personagem} = {'name': 'Ray Griffin', 'aliases': 'Thanos', 'age': 3000, 'team': 'Ordem Negra', 'active': False}</msg>
<status status="PASS" starttime="20210904 21:07:33.452" endtime="20210904 21:07:33.454"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<arg>${API_URL}/characters</arg>
<arg>json=${personagem}</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20210904 21:07:33.776" level="INFO">POST Request : url=http://marvel.qaninja.academy/characters 
 path_url=/characters 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'client_key': '6131897c2f65af00162b4dad', 'Content-Length': '97', 'Content-Type': 'application/json'} 
 body=b'{"name": "Ray Griffin", "aliases": "Thanos", "age": 3000, "team": "Ordem Negra", "active": false}' 
 </msg>
<msg timestamp="20210904 21:07:33.776" level="INFO">POST Response : url=http://marvel.qaninja.academy/characters 
 status=200, reason=OK 
 headers={'Server': 'Cowboy', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '156', 'Etag': 'W/"9c-ENan9DJcoZxABdwTRg9QxJxBCnA"', 'Date': 'Sun, 05 Sep 2021 00:07:32 GMT', 'Via': '1.1 vegur'} 
 body={"_id":"61340a44a382520016a4bd3d","name":"Ray Griffin","age":3000,"aliases":"Thanos","team":"Ordem Negra","active":false,"owner":"6131897c2f65af00162b4dad"} 
 </msg>
<status status="PASS" starttime="20210904 21:07:33.456" endtime="20210904 21:07:33.776"/>
</kw>
<kw name="Quando faço uma requisição POST para a rota characters">
<msg timestamp="20210904 21:07:33.783" level="FAIL">No keyword with name 'Quando faço uma requisição POST para a rota characters' found.</msg>
<status status="FAIL" starttime="20210904 21:07:33.783" endtime="20210904 21:07:33.783"/>
</kw>
<kw name="Então o código de retorno dever ser 409">
<status status="NOT RUN" starttime="20210904 21:07:33.788" endtime="20210904 21:07:33.789"/>
</kw>
<status status="FAIL" starttime="20210904 21:07:33.450" endtime="20210904 21:07:33.789">No keyword with name 'Quando faço uma requisição POST para a rota characters' found.</status>
</test>
<doc>Suite de Teste do cadastro de personagens na API da Marvel</doc>
<status status="FAIL" starttime="20210904 21:07:31.806" endtime="20210904 21:07:33.795"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="1" skip="0" id="s1" name="CreateCharacters">CreateCharacters</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
